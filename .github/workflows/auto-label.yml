name: Auto Label

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]

jobs:
  label-issues:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues'
    permissions:
      issues: write
      contents: read

    steps:
      - name: Label bug reports
        if: contains(github.event.issue.title, '[Bug]')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['bug', 'needs-triage']
            })

      - name: Label feature requests
        if: contains(github.event.issue.title, '[Feature]')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['enhancement', 'needs-triage']
            })

      - name: Label questions
        if: contains(github.event.issue.title, '[Question]')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['question', 'needs-triage']
            })

  label-prs:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Label based on files changed
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const labels = [];

            // Check for documentation changes
            if (files.some(file => file.filename.match(/\.(md|txt)$/i))) {
              labels.push('documentation');
            }

            // Check for UI/component changes
            if (files.some(file => file.filename.includes('components/'))) {
              labels.push('ui');
            }

            // Check for API changes
            if (files.some(file => file.filename.includes('api/'))) {
              labels.push('api');
            }

            // Check for admin changes
            if (files.some(file => file.filename.includes('admin/'))) {
              labels.push('admin');
            }

            // Check for authentication changes
            if (files.some(file => file.filename.includes('auth'))) {
              labels.push('authentication');
            }

            // Check for configuration changes
            if (files.some(file => file.filename.match(/\.(json|yml|yaml|config\.(js|ts))$/))) {
              labels.push('configuration');
            }

            // Check for dependency changes
            if (files.some(file => file.filename === 'package.json' || file.filename === 'package-lock.json')) {
              labels.push('dependencies');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              });
            }
